<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>了解数据结构和算法</title>
    <link href="/2020/05/30/c%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E4%BA%86%E8%A7%A3%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    <url>/2020/05/30/c%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E4%BA%86%E8%A7%A3%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2020/05/30/5aXjmqI1koKygnt.png" srcset="/img/loading.gif" alt="image.png"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>编程好比是一辆汽车，而数据结构和算法是汽车内部的变速箱。一个开车的人不懂变速箱的原理也是能开车的，同理一个不懂数据结构和算法的人也能编程。但是如果一个开车的人懂变速箱的原理，比如降低速度来获得更大的牵引力，或者通过降低牵引力来获得更快的行驶速度。那么爬坡时使用1档，便可以获得更大的牵引力；下坡时便使用低档限制车的行驶速度。</p><p>回到编程而言，比如将一个班级的学生名字要临时存储在内存中，你会选择什么数据结构来存储，数组还是ArrayList，或者HashSet，或者别的数据结构。如果不懂数据结构的，可能随便选择一个容器来存储，也能完成所有的功能，但是后期如果随着学生数据量的增多，随便选择的数据结构肯定会存在性能问题，而一个懂数据结构和算法在实际编程中会选择适当的数据结构来解决相应的问题，会极大的提高程序的性能。</p><p>拿一个厨师的厨艺来比较的话，<strong>真正的大厨一般不是那种能做各种花样的菜式的人，而是能把普通的菜炒出不平凡的效果的人。</strong>就像“酸辣土豆丝”，不同的人炒出来的效果就不一样，从一道简单的菜就可以看出厨师的功底，而数据结构与算法就是程序员的功底。</p><p>由图中可以看出，数据结构操组的对象是数据元素，即他们有相同的属性（属性也取决于观察者的角度），它们之间的存在的关系会产生不同的结构，数据元素之间的关系+操作构成了数据类型，对已有的数据类型进行抽象就构成了抽象数据类型（ADT），就是封装了值和操作的模型。</p></blockquote><h1 id="一-数据结构"><a href="#一-数据结构" class="headerlink" title="一.数据结构"></a>一.数据结构</h1><h2 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h2><p><strong>数据结构</strong>：互相之间<strong>有一种或多种关系的数据元素</strong>的集合。</p><ul><li>通常情况下，精心选择的数据结构可以带来<strong>更高的运行或者存储效率</strong>。数据结构往往同<strong>高效的检索算法和索引技术</strong>有关。</li></ul><ul><li><p>数据结构分为<strong>逻辑结构</strong>和<strong>存储结构</strong></p><ul><li><p>逻辑结构：反映了各数据间的逻辑关系的数据结构，即前<strong>后件的关系，如：早餐和午餐的关系。</strong></p></li><li><p>存储结构：又称<strong>物理结构</strong>，是数据的<strong>逻辑结构在计算机中存储空间的存放的方式</strong>。</p></li></ul></li><li><p>数据结构的表示：数据的<strong>逻辑结构</strong>的数学形式定义——数据结构是一个二元组。</p><blockquote><p>​                                                        B=(D,R)</p><p>B:数据结构                              D:数据元素的集合                      R：集合D上面的关系</p><p>例：                                               </p><p>​                                                         B=(D,R)</p><p>​                                             D：{早餐，午餐，晚餐}</p><p>​                                             R：{（早餐，午餐），（午餐，晚餐）}</p></blockquote></li></ul><h2 id="2-线性结构和非线性结构"><a href="#2-线性结构和非线性结构" class="headerlink" title="2.线性结构和非线性结构"></a>2.线性结构和非线性结构</h2><p> 结构又分为<strong>线性结构</strong> 和<strong>非线性结构</strong></p><ul><li><p>节点：1.根节点：数据结构中没有前件的节点。</p><p>​            2.终端节点(叶子节点)：没有后件的节点。</p><p>​            3.内部节点：除了根节点和叶子节点以外的节点。</p></li></ul><p><strong>线性结构</strong>：惯称<strong>线性表</strong>，常见的线性表有<strong>数组，链表，栈(stack)，队列,链表</strong>等。</p><ul><li>有且只有一个根节点</li><li>每个节点最多有一个前件和后后件。</li></ul><p><strong>非线性结构</strong>：</p><ul><li>不满足以上两个条件。如<strong>树形，网状</strong>等。</li></ul><h2 id="2-数据结构的基本功能"><a href="#2-数据结构的基本功能" class="headerlink" title="2.数据结构的基本功能"></a>2.数据结构的基本功能</h2><p>①、如何插入一条新的数优点</p><p>②、如何寻找某一特定的数据项</p><p>③、如何删除某一特定的数据项</p><p>④、如何迭代的访问各个数据项，以便进行显示或其他操作</p><h2 id="3-常见的数据结构"><a href="#3-常见的数据结构" class="headerlink" title="3.常见的数据结构"></a>3.常见的数据结构</h2><p><img src="https://i.loli.net/2020/05/30/DjXx65fQczRkW4S.png" srcset="/img/loading.gif" alt="image.png"></p><p><strong>有序数组的查找时间复杂度时O(lgn),无序数组的时间复杂度是O（N），但是对于插入操作，有序数组的时间复杂度是O(n)，因为他需要把比插入数大的都往后移，无序数组插入的时间复杂度为O(1)。</strong></p><table><thead><tr><th>数据结构</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>无序数组</td><td>插入快</td><td>查找慢，删除慢，大小固定，只能存储单一元素</td></tr><tr><td>有序数组</td><td>比无序数组查询块</td><td>插入慢，删除慢，大小固定，只能存储单一元素</td></tr><tr><td>栈</td><td>提供后进先出的存储方式</td><td>存取其他项很慢</td></tr><tr><td>队列</td><td>提供先进先出的存储方式</td><td>存取其他项很慢</td></tr><tr><td>链表</td><td>插入快，删除快</td><td>查找慢</td></tr><tr><td>二叉树</td><td><strong>如果树是平衡的</strong>，则查找，删除，插入都快</td><td>删除算法复杂</td></tr><tr><td>红黑树</td><td>树<strong>总是平衡</strong>的算法结构，则查找，删除，插入都快</td><td>算法复杂</td></tr><tr><td>2-3-4树</td><td>树<strong>总是平衡</strong>的算法结构，则查找，删除，插入都快。类似的树对磁盘的存储有效</td><td>算法复杂</td></tr><tr><td>哈希表</td><td>如果关键字已知则存取极快</td><td>删除慢，如果不知道关键字存取慢，对存储空间使用不充分</td></tr><tr><td>堆</td><td>插入，删除快，对最大数据项存取快</td><td>对其他数据项存取慢</td></tr><tr><td>图</td><td>对现实世界建模</td><td>有些算法慢且复杂</td></tr></tbody></table><h1 id="二-算法"><a href="#二-算法" class="headerlink" title="二.算法"></a>二.算法</h1><h2 id="1-算法的五个特征"><a href="#1-算法的五个特征" class="headerlink" title="1.算法的五个特征"></a>1.算法的五个特征</h2><ul><li><strong>有穷性</strong>：对于任意一组合法输入值，在执行又穷步骤之后一定能结束，即：<strong>算法中的每个步骤都能在有限时间内完成。</strong></li><li><strong>可行性</strong>：算法中的所有操作都必须足够基本，都可以通过已经实现的基本操作运算有限次实现之。即：<strong>保证每一步都可以执行。</strong></li><li><strong>确定性</strong>:在每种情况下所应执行的操作，在算法中都有确切的规定，使算法的执行者或阅读者都能明确其含义及如何执行。并且在任何条件下，算法都只有一条执行路径。即：<strong>要有明确的含义，不摸棱两可。</strong></li><li><strong>输入</strong>：作为算法加工对象的量值，通常体现在算法当中的一组变量。有些输入量需要在算法执行的过程中输入，而有的算法表面上可以没有输入，实际上已被嵌入算法之中。</li><li><strong>输出：</strong>它是一组与“输入”有确定关系的量值，是算法进行信息加工后得到的结果，这种确定关系即为算法功能。</li></ul><h2 id="2-算法的设计原则"><a href="#2-算法的设计原则" class="headerlink" title="2.算法的设计原则"></a>2.算法的设计原则</h2><p>①、<strong>正确性</strong>：首先，算法应当满足以特定的<strong>规则说明</strong>方式给出的需求。其次，对算法是否<strong>正确</strong>的理解可以有以下四个层次：</p><p>  一、程序语法错误。</p><p>  二、程序对于几组输入数据能够得出满足需要的结果。</p><p>  三、程序对于精心选择的、典型、苛刻切带有刁难性的几组输入数据能够得出满足要求的结果。</p><p>  四、程序对于一切合法的输入数据都能得到满足要求的结果。</p><p>  <strong>PS：通常以第 三 层意义的正确性作为衡量一个算法是否合格的标准。</strong></p><p>②、<strong>可读性</strong>：算法为了人的阅读与交流，其次才是计算机执行。因此算法应该易于人的理解；另一方面，晦涩难懂的程序易于隐藏较多的错误而难以调试。</p><p>③、<strong>健壮性</strong>：当输入的数据非法时，算法应当恰当的做出反应或进行相应处理，而不是产生莫名其妙的输出结果。并且，处理出错的方法不应是中断程序执行，而是应当返回一个表示错误或错误性质的值，以便在更高的抽象层次上进行处理。</p><p>④、<strong>高效率与低存储量需求</strong>：通常算法效率值得是算法执行时间；存储量是指算法执行过程中所需要的最大存储空间，两者都与问题的规模有关。</p><p>前面三点 <strong>正确性，可读性和健壮性</strong>相信都好理解。对于第四点算法的执行效率和存储量，我们知道比较算法的时候，可能会说“A算法比B算法快两倍”之类的话，但实际上这种说法没有任何意义。因为当数据项个数发生变化时，A算法和B算法的效率比例也会发生变化，比如数据项增加了50%，可能A算法比B算法快三倍，但是如果数据项减少了50%，可能A算法和B算法速度一样。所以描述算法的速度必须要和数据项的个数联系起来。也就是“大O”表示法，它是一种算法复杂度的相对表示方式，这里我简单介绍一下，后面会根据具体的算法来描述。</p><p><strong>相对(relative)：</strong>你只能比较相同的事物。你不能把一个做算数乘法的算法和排序整数列表的算法进行比较。但是，比较2个算法所做的算术操作（一个做乘法，一个做加法）将会告诉你一些有意义的东西；</p><p><strong>表示(representation)：</strong>大O(用它最简单的形式)把算法间的比较简化为了一个单一变量。这个变量的选择基于观察或假设。例如，排序算法之间的对比通常是基于比较操作(比较2个结点来决定这2个结点的相对顺序)。这里面就假设了比较操作的计算开销很大。但是，如果比较操作的计算开销不大，而交换操作的计算开销很大，又会怎么样呢？这就改变了先前的比较方式；</p><p><strong>复杂度(complexity)：</strong>如果排序10,000个元素花费了我1秒，那么排序1百万个元素会花多少时间？在这个例子里，复杂度就是相对其他东西的度量结果。</p><p>然后我们在说说算法的存储量，包括：</p><p><strong>程序本身所占空间；</strong></p><p><strong>输入数据所占空间；</strong></p><p><strong>辅助变量所占空间；</strong></p><p>一个算法的效率越高越好，而存储量是越低越好。</p><h2 id="3-算法的复杂程度"><a href="#3-算法的复杂程度" class="headerlink" title="3.算法的复杂程度"></a>3.算法的复杂程度</h2><ul><li><strong>时间复杂度</strong>：指执行算法所计算的工作量，而不是执行时间的长短。（<strong>算法的工作量是算法所执行基本运算的次数来度量的</strong>）</li></ul><p>​     <strong>O():大O记法</strong>：O(1)，O(n)，O(n^2)，O(n^3)，O(logn)等</p><p>​     常见的时间复杂度的比较：O(1) &lt; O(logn) &lt; O(n) &lt; O(nlogn) &lt; O(n^2) &lt; O(n^3) &lt; O(2^n) &lt; O(n!) &lt;   O(n^n)</p><p>​          <strong>S(n)=O(f(n))</strong>:n为问题的规模，f(n)为语句关于n所占存储空间的函数。</p><ul><li><strong>空间复杂度</strong>：指执行算法所需要的内存空间。（减少输入数据所占的内存空间及额外空间，通常采用压缩存储技术）</li></ul>]]></content>
    
    
    <categories>
      
      <category>c语言数据结构与算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Mvaen</title>
    <link href="/2020/05/26/JavaEE/Maven/"/>
    <url>/2020/05/26/JavaEE/Maven/</url>
    
    <content type="html"><![CDATA[<h1 id="Mvaen"><a href="#Mvaen" class="headerlink" title="Mvaen"></a>Mvaen</h1><h2 id="maven是什么【what】"><a href="#maven是什么【what】" class="headerlink" title="maven是什么【what】"></a>maven是什么【what】</h2><p><strong>① maven是一款服务于java平台的自动化构建工具</strong></p><p>make-&gt;Ant-&gt;Maven-&gt;Gradle</p><p>名字叫法：我们可以叫妹文也可以叫麦文，但是没有叫妈文的。</p><p><strong>② 构建</strong></p><p><strong>构建定义：把动态的Web工程经过编译得到的编译结果部署到服务器上的整个过程。</strong></p><p>编译：java源文件[.java]-&gt;编译-&gt;Class字节码文件[.class]</p><p>部署：最终在sevlet容器中部署的不是动态web工程，而是编译后的文件</p><p><strong>③ 构建的各个环节</strong></p><ul><li>清理clean：将以前编译得到的旧文件class字节码文件删除</li><li>编译compile：将java源程序编译成class字节码文件</li><li>测试test：自动测试，自动调用junit程序</li><li>报告report：测试程序执行的结果</li><li>打包package：动态Web工程打War包，java工程打jar包</li><li>安装install：Maven特定的概念—–将打包得到的文件复制到“仓库”中的指定位置</li><li>部署deploy：将动态Web工程生成的war包复制到Servlet容器下，使其可以运行</li></ul><h2 id="我为什么要学习这个技术"><a href="#我为什么要学习这个技术" class="headerlink" title="我为什么要学习这个技术?"></a>我为什么要学习这个技术?</h2><p><strong>① 一个项目就是一个工程</strong></p><p>如果项目非常庞大，就不适合使用package来划分模块，最好是每一个模块对应一个工程，利于分工协作。借助于maven就可以将一个项目拆分成多个工程</p><p><strong>② 项目中使用jar包，需要“复制”、“粘贴”项目的lib中</strong></p><p>同样的jar包重复的出现在不同的项目工程中，你需要做不停的复制粘贴的重复工作。借助于maven，可以将jar包保存在“仓库”中，不管在哪个项目只要使用引用即可就行。</p><p><strong>③ jar包需要的时候每次都要自己准备好或到官网下载</strong></p><p>借助于maven我们可以使用统一的规范方式下载jar包，规范</p><p><strong>④ jar包版本不一致的风险</strong></p><p>不同的项目在使用jar包的时候，有可能会导致各个项目的jar包版本不一致，导致未执行错误。借助于maven，所有的jar包都放在“仓库”中，所有的项目都使用仓库的一份jar包。</p><p><strong>⑤ 一个jar包依赖其他的jar包需要自己手动的加入到项目中</strong></p><p>FileUpload组件-&gt;IO组件，commons-fileupload-1.3.jar依赖于commons-io-2.0.1.jar</p><p>极大的浪费了我们导入包的时间成本，也极大的增加了学习成本。借助于maven，它会自动的将依赖的jar包导入进来。</p><h2 id="1Maven项目架构管理工具"><a href="#1Maven项目架构管理工具" class="headerlink" title="1Maven项目架构管理工具"></a>1Maven项目架构管理工具</h2><p>我们目前用来就是方便导入jar包的! .</p><p>Maven的核心思想:<strong>约定大于配置</strong></p><p>●有约束，不要去违反</p><h2 id="2-下载Maven"><a href="#2-下载Maven" class="headerlink" title="2.下载Maven"></a>2.下载Maven</h2><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/ZOHqlMnlPhi5393oWyanhHqrZG7FpXGxC7sQr6R97OtH0bRhvMOD*xEV2nRbEpN5MAvzPD25oOqcpjVy1j2xxw!!/b&bo=CgXoAgAAAAADB8c!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503094338353"></p><h2 id="3-配置MAVEN的环境变量"><a href="#3-配置MAVEN的环境变量" class="headerlink" title="3.配置MAVEN的环境变量"></a>3.配置MAVEN的环境变量</h2><p>   在我们的系统环境变量中</p><ul><li><p>配置如下配置</p><pre><code class="hljs dos">创建M2_HOME      maven目录下的bin目录      创建MAVEN_HOME    maven的目录        在系统的<span class="hljs-built_in">path</span>中配置   <span class="hljs-variable">%MAVEN_HOMEN%</span>\bin</code></pre><ul><li>然后命令行查看maven版本  </li></ul><pre><code class="hljs applescript">mvn -<span class="hljs-built_in">version</span></code></pre></li><li><p>测试Maven是否安装成功</p></li></ul><h2 id="4-阿里云镜像"><a href="#4-阿里云镜像" class="headerlink" title="4.阿里云镜像"></a>4.阿里云镜像</h2><ul><li>镜像： mirrors</li></ul><p>​        作用：加速我们的下载</p><ul><li><p>国内建议使用阿里云的镜像</p></li><li><p>在Maven目录下的 conf/settings.xml中的<mirrors>标签添加如下代码</mirrors></p></li></ul><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span>    <span class="hljs-comment">&lt;!--This sends everything else to /public --&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>nexus-aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Nexus aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span></code></pre><h2 id="5-本地仓库"><a href="#5-本地仓库" class="headerlink" title="5.本地仓库"></a>5.本地仓库</h2><p>在本地仓库，远程仓库：</p><p><strong>建立一个本地仓库</strong>：Maven目录下的conf/ settings.xml中的<localRepository>标签添加如下代码</localRepository></p><ul><li>你要创建本地仓库的位置</li></ul><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">localRepository</span>&gt;</span>D:\Maven\apache-maven-3.6.3-bin\apache-maven-3.6.3\maven-repo<span class="hljs-tag">&lt;/<span class="hljs-name">localRepository</span>&gt;</span></code></pre><h2 id="6-在idea中使用maven"><a href="#6-在idea中使用maven" class="headerlink" title="6.在idea中使用maven"></a>6.在idea中使用maven</h2><h3 id="1-模板"><a href="#1-模板" class="headerlink" title="1.模板"></a>1.模板</h3><p>   1.启动IDEA</p><p>   2.创建一个MAVEN的项目</p><p>   3.<img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGpjkOvkl6TXRQ40rVIQWqndHCGFlJM24.b8cp5Bhi0760sIT*vmYHlDAAE*4G3xMQYUaCfxy*6eWiynvbLK1THM!/b&bo=IwQWAwAAAAADNyA!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503100325085"></p><p>4.<img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/ZOHqlMnlPhi5393oWyanhN5woCzJWlLEwBlIhpMvDiWxoSv*oIxLAN*c1CTxo5dygx5ufDvgAReTPb3d0bxb0A!!/b&bo=zQO*AAAAAAADB1M!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503100621755"></p><p>5.<img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGlx1fja9x7BSAPvEhKDeA5NzV3A6V*3OhIp19fuMltbbS0lAUBgc66G.IeeLNAmrQlTcZibAY0Peg.X3Qt67254!/b&bo=*AMVAgAAAAADJ.o!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503100746624"></p><p>6.<img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGvohyrN6y5xFw4w6B1nNIQV3bFEP3UeUB8dIDzurXv52iJ0uvEWqtZ8kd6QteFFK0H2UWQklOypXuLnx741A9EA!/b&bo=aQekAwAAAAADN9s!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503102709240"></p><p>7.<img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGsNGOnR4ZwHd1Tp6V0Cax7UVu9FuzPk7LAZ04gCKo1gR4Ga9fTCANaeJndprfqRlH5qJ4.j3Z0RywnALXGnPls8!/b&bo=AwTKAgAAAAADN90!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503111805878">  </p><p>8.</p><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGqluifhDrveJkyhhr48ynLc7AzSf*WYDcIujlhCiNS6yVniyxka0*ycIparUgp8LOMdROw37TsnmMB.vk24Z698!/b&bo=EwTQAgAAAAADN9c!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503111945369"></p><h3 id="2-正常创建"><a href="#2-正常创建" class="headerlink" title="2.正常创建"></a>2.正常创建</h3><p><strong>不勾选内容，直接下一步</strong></p><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGuXH3gyxcxGGTvx6TJjK6qSvtWod5KayNvS.iTPSrtHqWVZYdC2KY..WDuGD9ygaAZfhpIW00VlXYKugSOLyG4c!/b&bo=1QYoAgAAAAADN.s!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503112616511"></p><p>2.在web下</p><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGtlezmDdhWGme3gam667CP78wQkDoBR3jAuMJ*WOLZqy9oU3lgPJFiFEMDZeDfxx4yf6HhbFM9MQy7z6BRSWSfE!/b&bo=8gHEAAAAAAADFwU!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503112733663"></p><p>3.文件夹功能</p><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGv.8cdWLgthDyg8qNdBZTQbz57iv8f2n85rjmyrPLEsVebbO9JmveMMUjf7Xc57B9qy8VJGevJY*oHligk3WLJU!/b&bo=.QLjAgAAAAADJxg!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503112947032"></p><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGi9AbFWsZqAnA0Ck3AgUljfwZ4xlwQlev8u8WeF9esUTizvN7j0Jc.EQKVqWNV90kIYNo634Gv5pN5J.Yef7wB4!/b&bo=wQT7AgAAAAADJz4!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503113202361"></p><h3 id="3-在idea中配置tomcat"><a href="#3-在idea中配置tomcat" class="headerlink" title="3.在idea中配置tomcat"></a>3.在idea中配置tomcat</h3><p>1.<strong>一般都在右上角</strong></p><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGtN9DzrU3kviGa5HamquI7P9Qhw6qzgov2i6dZagrcT5mIQMSyvkvLQHG9pzelYnEM2VcrimQ6uC1jsW8myOfBQ!/b&bo=XgKEAAAAAAADF.o!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503113504440"></p><p>2.</p><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGkB3PcH9nNVQ2XutACocE9KDSkcGEXtounuJx64SfscDVHEesRIQqUFqzg9jFFIF2BaSPSkCcvOzNR3UkO.D8HU!/b&bo=gwQBAwAAAAADN5c!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503113646612"></p><p>3.</p><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGn9uVYEvGjIiHc1LUb6v7pUeUgs7tIqXdFVgxaI3K9ZivIWeO*2QhTAYpKNGfZavNUmA*.Yxv5JCiG6k.VGpvdE!/b&bo=QgTiAgAAAAADN7Q!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503113907378"></p><p>4.</p><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGuT3.vBQfZwWvRsKUxH8q8zBmj5r3EdzJ4Yy7ZsOEOmwbUJMm0Y7HMf9Veup6cOlb5wAabJz81kURLK.rHHasMY!/b&bo=OgPdAgAAAAADJ.Q!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503120748401"></p><p>5.</p><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGgaQbfYZfArvE8jHHBNObGUvDblMdyQS95RQyQylsMPRZJDq4v8q80KgOBc9zguivqbrj6Pal2SX9SvJSRBZ2fY!/b&bo=0wa1AQAAAAADN3M!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503120830624"></p><p>6.</p><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGn49XJEG3RAWzexBVr2on8DlB7RiRQlFZefJOPJPRywr8UdvQ2svu53k2WVUSudIwcOJMPEsGFfrFIW*dj.ijkM!/b&bo=OgX9AQAAAAADJ8E!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503121022062"></p><h2 id="7-pom文件"><a href="#7-pom文件" class="headerlink" title="7.pom文件"></a>7.pom文件</h2><p><strong>在<dependencies>标签中添加依赖</dependencies></strong></p><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGlZvrdb2AlD2.9Qm97WoKhsIwuA1sHqNC*DNpp.gSu4j5CDmcEG7ZXrAQqBBf0Yep0f24JNebBcW.x1LE0HXgMA!/b&bo=sgULAwAAAAADR90!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503160741086"> </p><h2 id="8-解决Maven资源导出失败问题"><a href="#8-解决Maven资源导出失败问题" class="headerlink" title="8.解决Maven资源导出失败问题"></a>8.解决Maven资源导出失败问题</h2><p><strong>maven由于约定大于配置</strong>，我们之后会遇到我们写的配置文件，无法被导出或者生效的问题，解决方案：</p><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--在build中配置resource，防止我们资源导出失败的问题。--&gt;</span><span class="hljs-comment">&lt;!-- directory：指定资源所在的目录，目录的路径是相对于pom.xml文件的。</span><span class="hljs-comment">     includes：指定要包含哪些文件。</span><span class="hljs-comment">     filtering标签中：false表示不过滤，true表示过滤。</span><span class="hljs-comment">--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span>       <span class="hljs-tag">&lt;<span class="hljs-name">resources</span>&gt;</span>           <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span>               <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/java<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span>               <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span>                   <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.properties<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span>                   <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.xml<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span>               <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span>               <span class="hljs-tag">&lt;<span class="hljs-name">filtering</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">filtering</span>&gt;</span>           <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span>           <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span>               <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/resources<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span>               <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span>                   <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.properties<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span>                   <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.xml<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span>               <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span>               <span class="hljs-tag">&lt;<span class="hljs-name">filtering</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">filtering</span>&gt;</span>           <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span>       <span class="hljs-tag">&lt;/<span class="hljs-name">resources</span>&gt;</span>   <span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span></code></pre><h2 id="9-目录树"><a href="#9-目录树" class="headerlink" title="9.目录树"></a>9.目录树</h2><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGsGViVL0cwhWABeBcWd7Mb494rzH2LGtXcmC2QAIC0YQlg6tJ7RKJUQXIC6SWbglGs*EDvSKhwqqdRzbNeAau1s!/b&bo=swOZAQAAAAADFxo!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503161240131"></p><p><img src="http://m.qpic.cn/psc?/V130TojW3qFRK7/tS3tY63exiZNUWwJevnZGsQGbhI6XYh1TCfl9uiLX472raba94wzMaRVDYJBB41DCuKMcdQosEtjSRfS8toDudchNr8tiMSsYj9g8qftJrE!/b&bo=bwM6AwAAAAADF2c!&rf=viewer_4" srcset="/img/loading.gif" alt="image-20200503161253149"></p><h2 id="10-Maven仓库"><a href="#10-Maven仓库" class="headerlink" title="10.Maven仓库"></a>10.Maven仓库</h2><ul><li>地址：<a href="https://mvnrepository.com/" target="_blank" rel="noopener">https://mvnrepository.com/</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
